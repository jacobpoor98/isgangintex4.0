// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace AuthLab2_RyanPinkney.Pages.Admin
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "/Users/ryanpinkney/Documents/GitHub/isgangintex4.0/AuthLab2_RyanPinkney/Pages/Admin/_Imports.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/ryanpinkney/Documents/GitHub/isgangintex4.0/AuthLab2_RyanPinkney/Pages/Admin/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/ryanpinkney/Documents/GitHub/isgangintex4.0/AuthLab2_RyanPinkney/Pages/Admin/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/ryanpinkney/Documents/GitHub/isgangintex4.0/AuthLab2_RyanPinkney/Pages/Admin/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/ryanpinkney/Documents/GitHub/isgangintex4.0/AuthLab2_RyanPinkney/Pages/Admin/_Imports.razor"
using Microsoft.EntityFrameworkCore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/ryanpinkney/Documents/GitHub/isgangintex4.0/AuthLab2_RyanPinkney/Pages/Admin/_Imports.razor"
using AuthLab2_RyanPinkney.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/ryanpinkney/Documents/GitHub/isgangintex4.0/AuthLab2_RyanPinkney/Pages/Admin/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/admin/crashes/")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/admin/crashes/{id:int}")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/admin/")]
    public partial class Crashes : OwningComponentBase<ICrashRepository>
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 10 "/Users/ryanpinkney/Documents/GitHub/isgangintex4.0/AuthLab2_RyanPinkney/Pages/Admin/Crashes.razor"
       

    [Parameter]
    public int Id { get; set; }

    public ICrashRepository repo => Service;

    public IEnumerable<Accident> AccidentData { get; set; }

    public int Filter { get; set; }

    public string City { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        int p = 50;

        AccidentData = await repo.Accidents
            .Take(p)
            .OrderByDescending(u => u.crash_id)
            .ToListAsync();
    }

    public async Task FilterData(int Filter)
    {
        AccidentData = await repo.Accidents
            .Where(x => x.crash_id == Filter)
            .OrderByDescending(u => u.crash_id)
            .ToListAsync();
    }

    public async Task FilterData2(string City)
    {
        AccidentData = await repo.Accidents
            .Where(x => x.city == City)
            .ToListAsync();
    }

    public int skipCount { get; set; }

    public async Task nextPage(int skip, string City)
    {
        if (skipCount >= 50)
        {
            skipCount += skip;
        }
        else
        {
            skipCount = skip;
        }

        AccidentData = await repo.Accidents
            .Skip(skipCount)
            .Take(50)
            .OrderByDescending(u => u.crash_id)
            .ToListAsync();
    }

    public async Task previousPage(int skip)
    {

        if (skipCount >= 50)
        {
            skipCount -= skip;
        }
        else
        {
            skipCount = skip;
        }

        AccidentData = await repo.Accidents
            .Skip(skipCount)
            .Take(50)
            .OrderByDescending(u => u.crash_id)
            .ToListAsync();
    }

    public async Task firstPage(int skip)
    {
        skipCount = skip;
        AccidentData = await repo.Accidents
            .Skip(skipCount)
            .Take(50)
            .OrderByDescending(u => u.crash_id)
            .ToListAsync();
    }

    public async Task lastPage(int skip)
    {
        skipCount = skip;
        AccidentData = await repo.Accidents
            .Skip(skipCount)
            .Take(50)
            .OrderByDescending(u => u.crash_id)
            .ToListAsync();
    }

    public string GetEditUrl(long id) => $"/admin/crashes/edit/{id}";

    public string GetNextUrl(int id) => $"/admin/crashes/{id}";

    public async Task RemoveAccident(Accident a)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete the record?");
        if (confirmed)
        {
            repo.DeleteAccident(a);
            await UpdateData();
        }
    }





#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
    }
}
#pragma warning restore 1591
